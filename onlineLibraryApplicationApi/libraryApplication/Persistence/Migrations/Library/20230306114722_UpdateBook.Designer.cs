// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Persistence.Contexts;

namespace Persistence.Migrations.Library
{
    [DbContext(typeof(LibraryContext))]
    [Migration("20230306114722_UpdateBook")]
    partial class UpdateBook
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.17")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Domain.Entities.Book", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("Id")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AuthorName")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("AuthorName");

                    b.Property<int>("Count")
                        .HasColumnType("int")
                        .HasColumnName("Count");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Name");

                    b.Property<int>("PageCount")
                        .HasColumnType("int")
                        .HasColumnName("PageCount");

                    b.HasKey("Id");

                    b.ToTable("Books");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            AuthorName = "Esra ARAÇ",
                            Count = 3,
                            Name = "Yazılım Öğreniyorum",
                            PageCount = 350
                        },
                        new
                        {
                            Id = 2,
                            AuthorName = "Esra ARAÇ",
                            Count = 5,
                            Name = "Yazılım Öğreniyorum2",
                            PageCount = 300
                        },
                        new
                        {
                            Id = 3,
                            AuthorName = "Esra ARAÇ",
                            Count = 2,
                            Name = "Yazılım Öğreniyorum 3",
                            PageCount = 200
                        });
                });

            modelBuilder.Entity("Domain.Entities.UserActionsOnTheBook", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("Id")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("BookId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DeliveryDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("DeliveryDate");

                    b.Property<DateTime>("ReserveDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("ReserveDate");

                    b.Property<DateTime>("ReturnDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("ReturnDate");

                    b.Property<int>("StatusOfTheBook")
                        .HasColumnType("int")
                        .HasColumnName("StatusOfTheBook");

                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("UserId");

                    b.HasKey("Id");

                    b.HasIndex("BookId");

                    b.ToTable("UserActionsOnTheBooks");
                });

            modelBuilder.Entity("Domain.Entities.UserActionsOnTheBook", b =>
                {
                    b.HasOne("Domain.Entities.Book", "Book")
                        .WithMany()
                        .HasForeignKey("BookId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Book");
                });
#pragma warning restore 612, 618
        }
    }
}
